# -*- coding: utf-8 -*-
"""labcycleq5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nBVUsuxrXQNOEFRtGHTLu75xVTDfNiBD

Develop a program to read a string and perform the following
operations:

*  Print all possible substrings.

* Print all possible substrings of length K.

* Print all possible substrings of length K with N distinct
characters.

* Print substring(s) of length maximum length with N distinct
characters.

* Print all palindrome substrings.

Define function for each of the task
"""

def possible_substrings(str): #creating a function to find all the possible strings
  print("Possible substrings are: ")
  for i in range(0,len(str)+1):
    for j in range(i+1,len(str)+1):
      s=str[i:j]
      print(s)
 


def desiredlen_substring(str,length): #creating a function to find all the possible strings with desired length
  print("Strings of desired length are: ")
  for i in range(0,len(str)+1):
    for j in range(1,len(str)+1):
      string=str[i:j]
      if len(string)==length:
        print(string)
 

def Klength_Ndistinct(str,length,distinct_char): #creating a function to find all the possible strings with length K and N distinct characters
    print("Strings with length K and N distinct characters: ")
    for i in range(0,len(str)+1):
      for j in range(1,len(str)+1):
        string=str[i:j]
        if len(string) == length:
          result = set(string)
          if len(result) == distinct_char:
            print(string)
    
       
def MaxLength_Ndistinct(str,distinct_char): #creating a function to find all the possible strings with maximum length and N distinct characters 
  print("Strings with maximum length and N distinct characters: ")
  str_list = []
  for i in range(0,len(str)+1):
    for j in range(i+1,len(str)+1):
      string = str[i:j]
      d = set(string)
      if len(d) == distinct_char:
        str_list.append(string)
  length = len(max(str_list,key = len)) #finding the string with maximum length
  for i in str_list:
    if len(i)==length:
      print(i)
    


def string_palindrome(str): #creating a function to find all palindrome strings

  print("Paliandrome strings: ")
  for i in range(0,len(str)+1):
   for j in range(i+1,len(str)+1):
     string=str[i:j]
     r = string[::-1]
     if r == string:
        print(string)
   
#calling functions
string_input=input("Enter a string: ") #to input a string
possible_substrings(string_input)
print("\n") 

K=int(input("Enter the desired length of the substring: ")) 
desiredlen_substring(string_input,K)
print("\n")

K=int(input("Enter the length: "))
N=int(input("Enter no of distinct characters: "))
Klength_Ndistinct(string_input,K,N)
print("\n")

N=int(input("Enter number of distict characters: ")) 
MaxLength_Ndistinct(string_input,N)
print("\n")

string_palindrome(string_input)