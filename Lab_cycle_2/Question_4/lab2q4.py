# -*- coding: utf-8 -*-
"""lab2q4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nMMzKaYyo3mUy8HpmVbmGsDjX0zqyQ2j

Write a program to create a class Box with data members length, breadth, height, area, and volume. Provider constructor that enables initialization with one parameter (for cube), two parameters (for square prism) three parameters (rectangular prism). Also, provide functions to calculate area and volume. Create a list of N boxes with random measurements and print the details of the box with maximum volume: area ratio.
"""

import random

class Box:
  def __init__(box,*arg):
    if len(arg) == 1:
      box.length = arg[0]
      box.breadth = arg[0]
      box.height = arg[0]
    elif len(arg) == 2:
      box.length = arg[0]
      box.breadth = arg[0]
      box.height = arg[1]
    else:
      box.length = arg[0]
      box.breadth = arg[1]
      box.height = arg[2]
  def area(box):
    box.area = box.length*box.breadth
    return box.area

  def volume(box):
    box.volume = box.length*box.breadth*box.height
    return box.volume
  
  def box_area(box):
    print("Area: ",box.area)
 
  def box_volume(box):
    print("Volume ",box.volume,"\n")

ratio = []

cube = []
cube.append(random.randint(1,1000))
print("Cube prism")
print("_"*10)
print("Dimension: ",end=" ")
print(cube)

cube_prism = Box(cube[0])
area_cube=cube_prism.area()
volume_cube=cube_prism.volume()
cube_prism.box_area()
cube_prism.box_volume()

ratio.append((volume_cube/area_cube))

square = []
for i in range(2):
  square.append(random.randint(1,1000))
print("Square Prism ")
print("_"*13)
print("Dimension: ",end=" ")
print(square)

square_prism = Box(square[0],square[1])
area_square=square_prism.area()
volume_square=square_prism.volume()
square_prism.box_area()
square_prism.box_volume()

ratio.append((volume_square/area_square))

rectangle = []
for i in range(3):
  rectangle.append(random.randint(1,1000))

print("Rectangular Prism")
print("_"*20)
print("Dimension: ",end=" ")
print(rectangle)

rect_prism = Box(rectangle[0],rectangle[1],rectangle[2])
area_rect =rect_prism.area()
volume_rect =rect_prism.volume()
rect_prism.box_area()
rect_prism.box_volume()

ratio.append((volume_rect/area_rect))
index = ratio.index(max(ratio))

if index == 0:
  print("Cube Prism having maximum volume:area ratio   ", end=" ")
  print(cube)
elif index == 1:
  print("Square Prism having maximum volume : area - " , end=" ")
  print(square)
else:
  print("Rectangular Prism having maximum volume : area - ", end=" ")
  print(rectangle)
